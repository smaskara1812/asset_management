# Generated by Django 4.2.23 on 2025-09-28 13:29

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('asset_id', models.AutoField(primary_key=True, serialize=False)),
                ('asset_code', models.CharField(help_text='Unique barcode/QR code', max_length=50, unique=True)),
                ('asset_name', models.CharField(max_length=200)),
                ('purchase_date', models.DateField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('end_of_life_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=100, null=True)),
                ('model_number', models.CharField(blank=True, max_length=100, null=True)),
                ('brand', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Assets',
                'db_table': 'assets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AssetCategory',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Asset Categories',
                'db_table': 'asset_categories',
            },
        ),
        migrations.CreateModel(
            name='AssetStatus',
            fields=[
                ('status_id', models.AutoField(primary_key=True, serialize=False)),
                ('status_name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Asset Statuses',
                'db_table': 'asset_statuses',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department_id', models.AutoField(primary_key=True, serialize=False)),
                ('department_name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Departments',
                'db_table': 'departments',
            },
        ),
        migrations.CreateModel(
            name='DepreciationMethod',
            fields=[
                ('method_id', models.AutoField(primary_key=True, serialize=False)),
                ('method_name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Depreciation Methods',
                'db_table': 'depreciation_methods',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('location_id', models.AutoField(primary_key=True, serialize=False)),
                ('location_name', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Locations',
                'db_table': 'locations',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('vendor_id', models.AutoField(primary_key=True, serialize=False)),
                ('vendor_name', models.CharField(max_length=200)),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Vendors',
                'db_table': 'vendors',
            },
        ),
        migrations.CreateModel(
            name='Warranty',
            fields=[
                ('warranty_id', models.AutoField(primary_key=True, serialize=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('coverage_details', models.TextField(blank=True, null=True)),
                ('warranty_provider', models.CharField(blank=True, max_length=200, null=True)),
                ('contact_info', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warranties', to='asset_backend_app.asset')),
            ],
            options={
                'verbose_name_plural': 'Warranties',
                'db_table': 'warranties',
                'ordering': ['-end_date'],
            },
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('maintenance_id', models.AutoField(primary_key=True, serialize=False)),
                ('maintenance_type', models.CharField(choices=[('preventive', 'Preventive'), ('corrective', 'Corrective'), ('emergency', 'Emergency'), ('upgrade', 'Upgrade')], max_length=20)),
                ('performed_on', models.DateField()),
                ('performed_by', models.CharField(help_text='Name of person/company who performed maintenance', max_length=200)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('remarks', models.TextField(blank=True, null=True)),
                ('next_maintenance_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenances', to='asset_backend_app.asset')),
            ],
            options={
                'verbose_name_plural': 'Maintenances',
                'db_table': 'maintenances',
                'ordering': ['-performed_on'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('invoice_id', models.AutoField(primary_key=True, serialize=False)),
                ('invoice_number', models.CharField(max_length=100, unique=True)),
                ('invoice_date', models.DateField()),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='asset_backend_app.vendor')),
            ],
            options={
                'verbose_name_plural': 'Invoices',
                'db_table': 'invoices',
                'ordering': ['-invoice_date'],
            },
        ),
        migrations.CreateModel(
            name='EndOfLife',
            fields=[
                ('eol_id', models.AutoField(primary_key=True, serialize=False)),
                ('eol_date', models.DateField()),
                ('disposal_method', models.CharField(choices=[('resold', 'Resold'), ('scrapped', 'Scrapped'), ('recycled', 'Recycled'), ('donated', 'Donated'), ('returned', 'Returned to Vendor')], max_length=20)),
                ('final_value', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('remarks', models.TextField(blank=True, null=True)),
                ('disposal_company', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='end_of_life', to='asset_backend_app.asset')),
            ],
            options={
                'verbose_name_plural': 'End of Life Records',
                'db_table': 'end_of_life',
                'ordering': ['-eol_date'],
            },
        ),
        migrations.CreateModel(
            name='Depreciation',
            fields=[
                ('depreciation_id', models.AutoField(primary_key=True, serialize=False)),
                ('rate', models.DecimalField(decimal_places=2, help_text='Depreciation rate in percentage', max_digits=5)),
                ('book_value', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('calculated_on', models.DateField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='depreciations', to='asset_backend_app.asset')),
                ('method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='depreciations', to='asset_backend_app.depreciationmethod')),
            ],
            options={
                'verbose_name_plural': 'Depreciations',
                'db_table': 'depreciations',
                'ordering': ['-calculated_on'],
            },
        ),
        migrations.AddField(
            model_name='asset',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='asset_backend_app.assetcategory'),
        ),
        migrations.AddField(
            model_name='asset',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='asset_backend_app.department'),
        ),
        migrations.AddField(
            model_name='asset',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='asset_backend_app.location'),
        ),
        migrations.AddField(
            model_name='asset',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='asset_backend_app.assetstatus'),
        ),
        migrations.AddField(
            model_name='asset',
            name='vendor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='asset_backend_app.vendor'),
        ),
        migrations.CreateModel(
            name='AssetInvoiceMapping',
            fields=[
                ('mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_mappings', to='asset_backend_app.asset')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asset_mappings', to='asset_backend_app.invoice')),
            ],
            options={
                'verbose_name_plural': 'Asset Invoice Mappings',
                'db_table': 'asset_invoice_mappings',
                'unique_together': {('asset', 'invoice')},
            },
        ),
    ]
